snippet template "Basic template" b
%arara: lualatex: { shell: yes, synctex: yes }
\documentclass[a4paper]{article}

\usepackage{fontspec}

\usepackage{amsmath, amsthm, unicode-math}

\usepackage{setspace}



\title{${2:title}}
\date{${1:date}}
\author{Jack Ruder}


\begin{document}

\doublespacing
\maketitle

$0
\end{document}
endsnippet

priority 100
snippet "..." "ldots" iA
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "isMath()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
\(${1}\)`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
${1:${VISUAL}}.
\] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}.
\end{align*}
endsnippet


context "isMath()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "isMath()"
snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "isMath()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "isMath()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "isMath()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "isMath()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet


snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet != "equals" iA
\neq 
endsnippet

context "isMath()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "isMath()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "isMath()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "isMath()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "isMath()"
snippet sr "^2" iA
^2
endsnippet

context "isMath()"
snippet cb "^3" iA
^3
endsnippet

context "isMath()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "isMath()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "isMath()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

priority 10
context "isMath()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "isMath()"
snippet norm "norm" i
\|$1\|$0
endsnippet

priority 100
context "isMath()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "isMath()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "isMath()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "isMath()"
snippet compl "complement" iA
^{c}
endsnippet

context "isMath()"
snippet set "set" wA
\\{$1\\} $0
endsnippet


context "isMath()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "isMath()"
snippet tt "text" iA
\text{$1}$0
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "isMath()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "isMath()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "isMath()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "isMath()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "isMath()"
snippet "([a-zA-Z0-9])(,\.|\.,)" "vec" riA
\mathbf{`!p snip.rv=match.group(1)`}
endsnippet

snippet lintran "Linear Transform" iA
$1:$2\rightarrow $0
endsnippet


priority 100
snippet automata "Finite Automata" b 
\begin{figure}[ht]
	\centering
	\begin{tikzpicture}
		$2
	\end{tikzpicture}
	\caption{$1:Caption}
\end{figure}
$0
endsnippet

context "env('tikzpicture')"
snippet anode "Finite Automata Node" wA 
\node[state$2] ($1) {$1};$0
endsnippet

context "env('tikzpicture')"
snippet aedge "Finite Automata Edge" wA
($1) edge[${4:above}] node{$3} ($2) $0
endsnippet

priority 1000
snippet math "mathematica block" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "evaluate mathematica" wr
`!p
import subprocess
code = 'ToString[' + match.group(1) + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

priority 10
context "isMath()"
snippet st| "conditional" iA
\;|\;
endsnippet

priority 10
context "isMath()"
snippet hist "history set" iA
\mathbf{$1}^{($2)}$0
endsnippet
# vim:ft=snippets

priority 10
context "isMath()"
snippet UU "union" iA
\cup
endsnippet

context "isMath()"
snippet cl() "closure" iA
\textnormal{Cl}($1)$0
endsnippet

context "isMath()"
snippet int() "closure" iA
\textnormal{Int}($1)$0
endsnippet
